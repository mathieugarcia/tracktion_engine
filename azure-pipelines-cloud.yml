trigger:
  batch: true
  branches:
    include:
    - master
    - develop
    - feature/*
    - bugfix/*


strategy:
  matrix:
    linux_16:
      imageName: 'ubuntu-16.04'
    linux_18:
      imageName: 'ubuntu-18.04'
    mac_14:
      imageName: 'macos-10.14'
    mac_15:
      imageName: 'macos-10.15'
    windows_2016:
      imageName: 'vs2017-win2016'
    windows_2019:
      imageName: 'windows-2019'
pool:
  vmImage: $(imageName)
steps:
- checkout: self
  submodules: true
- bash: |
    if [[ "$OSTYPE" == "linux-gnu" ]]; then
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo apt-get update
        sudo apt-get install -y gcc-6 g++-6 freeglut3-dev g++ libasound2-dev libcurl4-openssl-dev libfreetype6-dev libjack-jackd2-dev libx11-dev libxcomposite-dev libxcursor-dev libxinerama-dev libxrandr-dev mesa-common-dev ladspa-sdk webkit2gtk-4.0 libgtk-3-dev xvfb valgrind
    fi
  displayName: 'Install dependencies'
- bash: |
    if [[ "$OSTYPE" == "linux-gnu" ]]; then
      export DISABLE_VALGRIND=1
      xvfb-run -a tests/run_tests
    else
      if [[ "$(imageName)" == "windows-2019" ]]; then
        export MSBUILD_EXE="C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\MSBuild.exe"
      elif [[ "$(imageName)" == "vs2017-win2016" ]]; then
        export MSBUILD_EXE="C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\MSBuild\15.0\Bin\MSBuild.exe"
      fi

      tests/run_tests
    fi
  displayName: 'Build'
